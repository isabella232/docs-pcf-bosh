---
title: Configuring and Installing Elastic Runtime
owner: PCF BOSH
---

<strong><%= modified_date %></strong>

This topic describes how to configure and install Elastic Runtime.

To perform the procedures in this topic, you must have completed the steps in [Preparing Your Environment](prepare-env.html), [Deploying the BOSH Director](deploy-director.html), [Applying the Cloud Config](cloud-config.html), and [Uploading the Stemcell](upload-stemcell.html). After finishing this topic, continue to [Running Errands for Elastic Runtime](running-errands-ert.html). 

<p class="note"><strong>Note</strong>: To automate deploying Elastic Runtime, see the <a href="../automating/pipeline.html#ert">Deploy Elastic Runtime</a> section of the <em>Building a Pipeline</em> topic.</p>

## <a id='ops-files'></a>Step 1: Select Your Ops Files

Ops files specify operations to perform on the Cloud Foundry deployment [manifest](https://github.com/cloudfoundry/cf-deployment/blob/master/cf-deployment.yml#0.0.0) that you downloaded in the [Uploading the Stemcell](upload-stemcell.html) topic. 

You can use ops files to configure the manifest for Elastic Runtime by adding Pivotal defaults, [errands](https://bosh.io/docs/terminology.html#errand), and [releases](https://bosh.io/docs/terminology.html#release) to your deployment.

The following table lists the available ops files and describes the functionality they add to your deployment. The table also specifies whether an ops file is required, recommended, or optional. 

Visit the `1.9` branch of the `p-ert-bosh-experiment` GitHub [repo](https://github.com/pivotal-cf/p-ert-bosh-experiment/tree/1.9) and see the `opsfiles` directory within `cf-deployment` to view all available ops files. 

<table>
<tr>
<th>Name</th>
<th>Purpose</th>
<th>Status</th>
</tr>
<tr>
<td><code>gcp.yml</code></a></td>
<td>This ops file in <code>cf-deployment/opsfiles</code> customizes the Cloud Foundry deployment manifest for Google Cloud Platform (GCP).</td>
<td>Required if deploying on GCP</td>
</tr>
<tr>
<td><code>tcp-routing-gcp.yml</code></a></td>
<td>This ops file in <code>cf-deployment/opsfiles</code> customizes the Cloud Foundry deployment manifest for TCP routing in GCP.</td>
<td>Required if deploying on GCP</td>
</tr>
<tr>
<td><a href="https://github.com/pivotal-cf/p-ert-bosh-experiment/blob/1.9/pivotal-defaults.yml">Pivotal Defaults</a></td>
<td>This ops file customizes the Cloud Foundry deployment manifest with Elastic Runtime defaults for values such as the number of Diego cell instances or the default application security group.</td>
<td>Required</td>
</tr>
<tr>
<td><a href="https://github.com/pivotal-cf/p-ert-bosh-experiment/blob/1.9/pivotal-defaults.yml">Pivotal Defaults</a></td>
<td>This ops file customizes the Cloud Foundry deployment manifest with Elastic Runtime defaults for values such as the number of Diego cell instances or the default application security group.</td>
<td>Required</td>
</tr>
<tr>
<td><a href="https://github.com/pivotal-cf/p-ert-bosh-experiment/blob/1.9/ip-overrides.yml">IP Overrides</a></td>
<td>This ops file customizes the Cloud Foundry deployment manifest to replace the IP address values for various components with the static IP addresses for Consul, NATS, and MySQL.</td>
<td>Required</td>
</tr>
<tr>
<td><a href="https://github.com/pivotal-cf/p-ert-bosh-experiment/blob/1.9/mysql-proxy.yml">MySQL Proxy</a></td>
<td>This ops file configures the MySQL proxy, which proxies TCP connections to healthy MariaDB nodes and provides a dashboard where operators can observe health and metrics for each instance in the proxy tier. Use this ops file only if you are using MySQL in your deployment.</td>
<td>Optional</td>
</tr>
<tr>
<td><a href="https://github.com/pivotal-cf/p-ert-bosh-experiment/blob/1.9/mysql-monitoring.yml">MySQL Monitoring Release</a></td>
<td>This ops file installs the MySQL Monitoring release. The release monitors your MySQL cluster to validate that replication is working across nodes and provides notifications over e-mail if it detects a replication failure. Install this release only if you are using MySQL in your deployment.</td>
<td>Optional</td>
</tr>
<tr>
<td><a href="https://github.com/pivotal-cf/p-ert-bosh-experiment/blob/1.9/errands/smoke-tests.yml">Smoke Tests</a></td>
<td>This ops file adds the smoke tests errand to your deployment. The smoke tests errand runs basic functionality tests against Elastic Runtime.</td>
<td>Recommended</td>
</tr>
<tr>
<td><a href="https://github.com/pivotal-cf/p-ert-bosh-experiment/blob/1.9/errands/push-apps-manager.yml">Push Apps Manager</a></td>
<td>This ops file adds the errand that pushes Apps Manager to your deployment. Apps Manager is a web-based tool to help manage organizations, spaces, applications, services, and users in Elastic Runtime. See the Apps Manager <a href="https://docs.pivotal.io/pivotalcf/console/index.html">documentation</a> for more information.</td>
<td>Optional</td>
</tr>
<tr>
<td><a href="https://github.com/pivotal-cf/p-ert-bosh-experiment/blob/1.9/errands/deploy-notifications.yml">Deploy Notifications</a></td>
<td>This ops file adds the errand that deploys the Notifications release. The release deploys an API for sending email notifications to Elastic Runtime users. For more information, see the <a href="http://docs.pivotal.io/pivotalcf/adminguide/notifications.html">Getting Started with the Notifications Service</a> topic.</td>
<td>Recommended</td>
</tr>
<tr>
<td><a href="https://github.com/pivotal-cf/p-ert-bosh-experiment/blob/1.9/errands/deploy-notifications-ui.yml">Deploy Notifications UI</a></td>
<td>This ops file adds the errand that deploys the Notifications UI release. The release deploys a dashboard for Elastic Runtime users to manage their notification subscriptions.</td>
<td>Recommended</td>
</tr>
<tr>
<td><a href="https://github.com/pivotal-cf/p-ert-bosh-experiment/blob/1.9/errands/deploy-autoscaling.yml">Deploy Autoscaling</a></td>
<td>This ops file adds the errand that deploys the Autoscaling release. The release is a <a href="https://docs.pivotal.io/pivotalcf/devguide/services/managing-services.html">marketplace</a> service that enables developers to automatically scale applications on Elastic Runtime based on rules they specify. For more information, see the <a href="http://docs.pivotal.io/pivotalcf/appsman-services/autoscaler/using-autoscaler.html">Scaling an Application Using Autoscaler</a> topic.</td>
<td>Recommended</td>
</tr>
<tr>
<td><a href="https://github.com/pivotal-cf/p-ert-bosh-experiment/blob/1.9/errands/autoscaling-register-broker.yml">Autoscaling Register Broker</a></td>
<td>This ops file adds the errand that deploys the service broker that registers the Autoscaler service on the marketplace. You must add this errand if you add the Deploy Autoscaling errand.</td>
<td>Recommended</td>
</tr>
<tr>
<td><a href="https://github.com/pivotal-cf/p-ert-bosh-experiment/blob/1.9/errands/autoscaling-destroy-broker.yml">Autoscaling Destroy Broker</a></td>
<td> This ops file adds the errand that removes the Autoscaler service from the marketplace. You must add this errand if you add the Deploy Autoscaling errand.</td>
<td>Recommended</td>
</tr>
<tr>
<td><a href="https://github.com/pivotal-cf/p-ert-bosh-experiment/blob/1.9/errands/push-pivotal-account.yml">Push Pivotal Account</a></td>
<td> This ops file adds the errand that deploys the Pivotal Account release. Pivotal Account is a web-based user management tool that allows users to create and manage their accounts in Elastic Runtime. See the <a href="https://docs.pivotal.io/pivotalcf/opsguide/pivotal-account.html">Enabling Pivotal Account</a> topic for more information.</td>
<td>Optional</td>
</tr>
<tr>
<td><a href="https://github.com/pivotal-cf/p-ert-bosh-experiment/blob/1.9/errands/mysql-recovery/bootstrap.yml">MySQL Recovery Bootstrap</a></td>
<td> This ops file adds the errand that restarts a MySQL Galera cluster, which is required when the cluster has lost quorum. Use this ops file only if you are using MySQL in your deployment.</td>
<td>Optional</td>
</tr>
<tr>
<td><a href="https://github.com/pivotal-cf/p-ert-bosh-experiment/blob/1.9/errands/mysql-recovery/rejoin-unsafe.yml">MySQL Rejoin Unsafe</a></td>
<td> This ops file adds the errand that forces a node to rejoin a cluster. Use this ops file only if you are using MySQL in your deployment.</td>
<td>Optional</td>
</tr>
</table>

## <a id='deploy'></a>Step 2: Install Elastic Runtime

To install Elastic Runtime, you use the BOSH CLI to deploy the Cloud Foundry deployment manifest and specify your ops files, variables file, and additional variables.

Perform the following steps to install Elastic Runtime:

1. Clone the `p-ert-bosh-experiment` GitHub [repo](https://github.com/pivotal-cf/p-ert-bosh-experiment) into your `workspace`:
	<pre class="terminal">
	$ git clone http<span>s:</span>//github.com/pivotal-cf/p-ert-bosh-experiment.git ~/workspace/p-ert
	</pre>
1. Change into the `p-ert` directory and check out the `1.9` branch:
	<pre class="terminal">
	$ cd ~/workspace/p-ert
	$ git checkout 1.9
	</pre>
1. Download all required tarballed releases.
	<p class="note"><strong>Note</strong>: Installing a release requires both an ops file and a tarballed release. The tarballed releases are not currently available from an official distribution channel.</p>
1. Ensure that you are logged in to your BOSH Director.
1. Generate your base deployment manifest with `bosh interpolate`. The following example includes all available ops files, along with their required variables. Your exact command may be different depending on the functionality you want to add. Refer to the above [section](#ops-files) for more information.
	<pre class="terminal">
	$ bosh interpolate -d cf ~/workspace/cf-deployment/cf-deployment.yml \
	  --ops-file ~/workspace/cf-deployment/opsfiles/gcp.yml \
	  --ops-file ~/workspace/cf-deployment/opsfiles/tcp-routing-gcp.yml \
	  --ops-file ~/workspace/p-ert/pivotal-defaults.yml \
	  --ops-file ~/workspace/p-ert/ip-overrides.yml \
	  --ops-file ~/workspace/p-ert/mysql-proxy.yml \
	  --ops-file ~/workspace/p-ert/mysql-monitoring.yml \
	  --ops-file ~/workspace/p-ert/errands/smoke-tests.yml \
	  --ops-file ~/workspace/p-ert/errands/push-apps-manager.yml \
	  --ops-file ~/workspace/p-ert/errands/deploy-notifications.yml \
	  --ops-file ~/workspace/p-ert/errands/deploy-notifications-ui.yml \
	  --ops-file ~/workspace/p-ert/errands/deploy-autoscaling.yml \
	  --ops-file ~/workspace/p-ert/errands/autoscaling-register-broker.yml \
	  --ops-file ~/workspace/p-ert/errands/autoscaling-destroy-broker.yml \
	  --ops-file ~/workspace/p-ert/errands/push-pivotal-account.yml \
	  --ops-file ~/workspace/p-ert/errands/mysql-recovery/bootstrap.yml \
	  --ops-file ~/workspace/p-ert/errands/mysql-recovery/rejoin-unsafe.yml \
	  --var "system\_domain=sys.example.com" \
	  --var "apps\_domain=apps.example.com" \
	  --var "smtp\_host\_name=smtp.example.com" \
	  --var "smtp\_host\_port=25" \
	  --var "smtp\_sender\_username=user<span>@</span>example.com" \
	  --var "smtp\_sender\_password=password" \
	  --var "cf\_release\_path=file://PATH-TO-CLOSED-SOURCE-RELEASES/cf-246.0.2.tgz)" \
	  --var "cf\_release\_version=246.0.2" \
	  --var "notifications\_release\_path=file://PATH-TO-CLOSED-SOURCE-RELEASES/notifications-31.tgz)" \
	  --var "notifications\_release\_version=31" \
	  --var "notifications\_ui\_release\_path=file://PATH-TO-CLOSED-SOURCE-RELEASES/notifications-ui-26.tgz)" \
	  --var "notifications\_ui\_release\_version=26" \
	  --var "cf\_autoscaling\_release\_path=file://PATH-TO-CLOSED-SOURCE-RELEASES/cf-autoscaling-67.tgz)" \
	  --var "cf\_autoscaling\_release\_version=67" \
	  --var "push\_apps\_manager\_release\_path=file://PATH-TO-CLOSED-SOURCE-RELEASES/push-apps-manager-659.7.tgz)" \
	  --var "push_apps\_manager\_release\_version=659.7" \
	  --var "mysql\_monitoring\_release\_path=file://PATH-TO-CLOSED-SOURCE-RELEASES/mysql-monitoring-6.tgz)" \
	  --var "mysql\_monitoring\_release\_version=6" \
	  --var "pivotal\_account\_release\_path=file://PATH-TO-CLOSED-SOURCE-RELEASES/pivotal-account-1.tgz)" \
	  --var "pivotal\_account\_release\_version=1" \
	  &gt; cf-base.yml
	</pre>

1. Modify the base manifest `cf-base.yml` as needed and save the final manifest as `cf.yml`.
1. Deploy Elastic Runtime: 

	<pre class="terminal">
	$ bosh deploy -d cf cf.yml \
	  --vars-store cf-vars.yml \
	</pre>

	The example command above includes the <code>--vars-store</code> flag, which specifies a variables store file. The first time you run the command, BOSH generates credentials and loads them into the file <code>cf-vars.yml</code>.
	
After the deployment finishes, continue to the [Running Errands for Elastic Runtime](running-errands-ert.html) topic.

